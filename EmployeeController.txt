package com.simpleapp.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.simpleapp.demo.entity.Employee;
import com.simpleapp.demo.repository.EmployeeRepository;
import com.simpleapp.demo.service.EmployeeService;

@RestController
@RequestMapping("/api")
public class EmployeeController {
	

/*	request -> controller -> service -> repository(entity)
	
	1)get employee into system
	2)get all the employees
	3)get one employee
	4)update all the employee
*/
	


    @Autowired
	EmployeeService employeeService;
	
	
	
	//localhost :8080/api/employee
	@PostMapping("/employee")
	public ResponseEntity<String> addEmployee(@RequestBody Employee employee) {
		String message = employeeService.addEmployee(employee);
		return ResponseEntity.status(HttpStatus.CREATED).body(message);
	}
	
	//localhost:8080/api/employee/1
	@GetMapping("/employee/{id}")
	public ResponseEntity<Employee> getSingleEmployee(@PathVariable("id") int empId) {
		Employee emp = employeeService.getSingleEmployee(empId);
		if(emp != null) {
			return ResponseEntity.status(HttpStatus.OK).body(emp);
		} else {
			return ResponseEntity.status(HttpStatus.NO_CONTENT).body(emp);
		}

	}
	
	//localhost:8080/api/employee/byName/Emp1
	@GetMapping("/employee/byName/{name}")
	public ResponseEntity<Employee> getSingleEmployeeByName(@PathVariable("name") String name) {
		Employee emp = employeeService.getEmployeeByName(name);
		if(emp != null) {
			return ResponseEntity.status(HttpStatus.OK).body(emp);
		} else {
			return ResponseEntity.status(HttpStatus.NO_CONTENT).body(emp);
		}
	}
	
	//localhost:8080/api/employee/count
		@GetMapping("/employee/count")
		public int getEmployeeCount() {
			int count = employeeService.getEmployeeCount();
			return count;
		}
		
		//localhost:8080/api/employee/count
				@GetMapping("/employee/countByJpa")
				public long getEmployeeCountByJpa() {
					long count = employeeService.getEmployeeCountByJpa();
					return count;
				}
}